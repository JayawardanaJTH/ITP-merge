@model Project.Models.UserFeedback



            @{
                ViewBag.Title = "Edit";
                Layout = null;
            }




            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="content-w3ls">
                    <h1 class="agile-head text-center">Edit Your Feedback </h1>
                    <div class="form-w3layouts">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.id)

                        <div class="form-control">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "header" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-dangerr" })
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="form-control">
                            @Html.LabelFor(model => model.Teacher, htmlAttributes: new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Teacher, new { htmlAttributes = new { @class = "header" } })
                                @Html.ValidationMessageFor(model => model.Teacher, "", new { @class = "text-dangerr" })
                                <div class="clear"></div>
                            </div>

                        </div>

                        <div class="form-control">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "header" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-dangerr" })
                                <div class="clear"></div>
                            </div>
                        </div>


                        <div class="form-control">
                            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "enquiry" } })
                                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-dangerr" })
                                <div class="clear"></div>
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="register"  onclick="save()" />
                                <script>
                                    function save() {
                                          alert("Do you want to save the changes");

                                        }
                                </script>
                                <div>
                                    <button class="btn back" onclick="back()" > @Html.ActionLink("Back to List", "Index", new { style = "color: white" })</button>
                                    <script>
                                      function back() {
                                          alert("Do you want to go back to the feedback list");

                                        }
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
